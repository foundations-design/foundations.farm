:root {
// this stuff will go into np design system

  /* Grid proportions */
  --grid-width: 1200;
  --grid-column-width: 60;
  --grid-columns: 12;

  /* Grid logic */
  --grid-gutters: calc(var(--grid-columns) - 1);

  /* Grid proportion logic */
  --column-proportion: calc(var(--grid-column-width) / var(--grid-width));
  --gutter-proportion: calc((1 - (var(--grid-columns) * var(--column-proportion))) / var(--grid-gutters));

  /* Container Units */
  --column-unit: calc(var(--column-proportion) * var(--container-width));
  --gutter-unit: calc(var(--gutter-proportion) * var(--container-width));
  --column-and-gutter-unit: calc(var(--column-unit) + var(--gutter-unit));

  /* Container Width */
  --container-width: 90vw;
}

/* Max Width */
@media (min-width: 1400px) {
  :root {
    --container-width: 1200px;
  }
}

@function columns($i) {
  @return calc(#{$i} * var(--column-unit));
}

@function gutters($i) {
  @return calc(#{$i} * var(--gutter-unit));
}

@function column-spans($i) {
  @return calc(#{$i} * var(--column-and-gutter-unit) - var(--gutter-unit));
}

@function gutter-spans($i) {
  @return calc(#{$i} * var(--column-and-gutter-unit) - var(--column-unit));
}

@function mix-units($columns, $gutters: $columns) {
  @return calc((#{$columns} * var(--column-unit)) + (#{$gutters} * var(--gutter-unit)));
}

// Base grid goes here


$column-layout: 1fr [c] var(--container-width) 1fr; // Use this within sections to define columns

body {
    display: grid; // This grid is for the rows   
}

header, main, footer {
    display: grid;
    grid-template-columns: $column-layout;
    & > * {
        grid-column: c
    }
}

.layout {
    display: contents;
}