:root {
  /* Grid proportions */
  --grid-width: 960;
  --grid-column-width: 60;
  --grid-columns: 12;

  /* Grid logic */
  --grid-gutters: calc(var(--grid-columns) - 1);

  /* Grid proportion logic */
  --column-proportion: calc(var(--grid-column-width) / var(--grid-width));
  --gutter-proportion: calc((1 - (var(--grid-columns) * var(--column-proportion))) / var(--grid-gutters));

  /* Container Units */
  --column-unit: calc(var(--column-proportion) * var(--container-width));
  --gutter-unit: calc(var(--gutter-proportion) * var(--container-width));
  --column-and-gutter-unit: calc(var(--column-unit) + var(--gutter-unit));

  /* Container Width */
  --container-width: 90vw;
}

/* Max Width */
@media (min-width: 1400px) {
  :root {
    --container-width: 1200px;
  }
}

@function columns($i) {
  @return calc(#{$i} * var(--column-unit));
}

@function gutters($i) {
  @return calc(#{$i} * var(--gutter-unit));
}

@function column-spans($i) {
  @return calc(#{$i} * var(--column-and-gutter-unit) - var(--gutter-unit));
}

@function gutter-spans($i) {
  @return calc(#{$i} * var(--column-and-gutter-unit) - var(--column-unit));
}

@function mix-units($columns, $gutters: $columns) {
  @return calc((#{$columns} * var(--column-unit)) + (#{$gutters} * var(--gutter-unit)));
}

// Base grid goes here
body {
    display: grid; // This grid is for the rows
    --column-layout: 1fr [c] var(--container-width) 1fr; // Use this within sections to define columns
    
    // * ONLY USE html5 SEMANTIC ELEMENTS HERE: https://www.w3schools.com/html/html5_semantic_elements.asp
    grid-template-areas:
        "header"
        "main"
        "footer"; 
}

header {
    grid-area: header;
    display: grid;
    grid-template-columns: var(--column-layout); // Use our defined columns
    & > * { // place our content in the middle
        grid-column: c
    }

}

// I'M A BEAST.. we want to apply full-width backgrounds to children of main 
// so I just moved the grid one section down :D
main > * {
    grid-area: main;
    display: grid;
    grid-template-columns: var(--column-layout);
    & > * {
        grid-column: c
    }
}

footer {
    grid-area: footer;

    display: grid;
    grid-template-columns: var(--column-layout);
    & > * {
        grid-column: c
    }
}

// I'll keep the keep the verbosity for now for the sake of clarity
// but in the future we can do this in a lot less lines:

// body {
//     display: grid; // This grid is for the rows
//     --column-layout: 1fr [c] var(--container-width) 1fr; // Use this within sections to define columns
//     grid-template-areas:
//         "header"
//         "main"
//         "footer"; // ! ONLY USE html5 SEMANTIC ELEMENTS HERE: https://www.w3schools.com/html/html5_semantic_elements.asp

        // main {grid-area: main}
        // body {grid-area: body}
        // footer {grid-area: footer}
// }

// header, main, footer {
//     display: grid;
//     grid-template-columns: var(--column-layout);
//     & > * {
//         grid-column: c
//     }
// }

